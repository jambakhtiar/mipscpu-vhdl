-- VHDL Entity MIPS.MIPS_tb.symbol
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--


ENTITY MCU_tb IS
-- Declarations

END MCU_tb ;

--
-- VHDL Architecture MIPS.MIPS_tb.struct
--
-- Created:
--          by - kolaman.UNKNOWN (KOLAMAN-PC)
--          at - 09:22:45 17/02/2013
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2011.1 (Build 18)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

LIBRARY work;

ARCHITECTURE struct OF MCU_tb IS

   -- Architecture declarations

   -- Internal signal declarations

   SIGNAL Instruction_out : STD_LOGIC_VECTOR( 31 DOWNTO 0 );
   SIGNAL PC              : STD_LOGIC_VECTOR( 9 DOWNTO 0 );
   SIGNAL clock           : STD_LOGIC;
   SIGNAL reset           : STD_LOGIC;
   SIGNAL LEDR_out        : STD_LOGIC_VECTOR( 7 DOWNTO 0 );
   SIGNAL HEX0_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL HEX1_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL HEX2_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL HEX3_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL HEX4_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL HEX5_out        : STD_LOGIC_VECTOR( 6 DOWNTO 0 );
   SIGNAL SW_in           : STD_LOGIC_VECTOR( 7 DOWNTO 0 );
   SIGNAL KEY1            : STD_LOGIC;
   SIGNAL KEY2            : STD_LOGIC;
   SIGNAL KEY3            : STD_LOGIC;
   SIGNAL PWM_out         : STD_LOGIC;
   SIGNAL PC_ENABLE       : STD_LOGIC;




   COMPONENT MCU IS

   GENERIC ( sim : INTEGER := 0 );
   PORT( 
           KEY_reset								: IN 	STD_LOGIC; 
           clock								   : IN 	STD_LOGIC; 
           PC									   : OUT  STD_LOGIC_VECTOR( 9 DOWNTO 0 );
           Instruction_out						: OUT 	STD_LOGIC_VECTOR( 31 DOWNTO 0 );
           LEDR_out						 	   : OUT 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
           HEX0_out, HEX1_out, HEX2_out	: OUT 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
           HEX3_out, HEX4_out, HEX5_out	: OUT 	STD_LOGIC_VECTOR( 6 DOWNTO 0 );
           SW_in								   : IN 	STD_LOGIC_VECTOR( 7 DOWNTO 0 );
           KEY1, KEY2, KEY3 		         : IN 	STD_LOGIC;
           PWM_out                        : OUT   STD_LOGIC;
           PC_ENABLE                       : IN    STD_LOGIC 
       );
   END COMPONENT;

   COMPONENT MCU_tester
   PORT (
      Instruction_out : IN     STD_LOGIC_VECTOR ( 31 DOWNTO 0 );
      PC              : IN     STD_LOGIC_VECTOR ( 9 DOWNTO 0 );
      KEY1            : OUT    STD_LOGIC; 
      KEY2            : OUT    STD_LOGIC;  
      KEY3            : OUT    STD_LOGIC;
      clock           : OUT    STD_LOGIC;
      reset           : OUT    STD_LOGIC;
      PC_ENABLE       : OUT    STD_LOGIC;
      SW_in				 : OUT 	STD_LOGIC_VECTOR( 7 DOWNTO 0 )  
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   --FOR ALL : MCU USE ENTITY work.MCU;
   --FOR ALL : MCU_tester USE ENTITY work.MCU_tester;
   -- pragma synthesis_on


    --SIGNAL  KEY1            :     STD_LOGIC; 
   --SIGNAL  KEY2            :     STD_LOGIC;  
   --SIGNAL  KEY3            :     STD_LOGIC;   

BEGIN

   -- Instance port mappings.
   U_0 : MCU
      GENERIC MAP ( 1 )
      PORT MAP (
         KEY_reset           => reset,
         clock             => clock,
         PC                => PC,
         Instruction_out   => Instruction_out,
         LEDR_out          => LEDR_out,
         HEX0_out          => HEX0_out,
         HEX1_out          => HEX1_out,
         HEX2_out          => HEX2_out,
         HEX3_out          => HEX3_out,
         HEX4_out          => HEX4_out,
         HEX5_out          => HEX5_out,
         SW_in             => SW_in,
         KEY1              => KEY1,
         KEY2              => KEY2,
         KEY3              => KEY3,
         PWM_out           => PWM_out,
         PC_ENABLE         => PC_ENABLE
      );
   U_1 : MCU_tester
      PORT MAP (
         Instruction_out => Instruction_out,
         PC              => PC,
         KEY1             => KEY1,
         KEY2             => KEY2,
         KEY3             => KEY3,
         clock           => clock,
         reset           => reset,
         PC_ENABLE       => PC_ENABLE,
         SW_in           => SW_in
      );

END struct;
